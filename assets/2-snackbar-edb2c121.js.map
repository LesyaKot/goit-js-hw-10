{"version":3,"file":"2-snackbar-edb2c121.js","sources":["../../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stateInput = document.querySelector('input[name=\"state\"]');\n\nconst button = document.querySelector('button');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  let delay = delayInput.value;\n  let fulfilledDelay = 'fulfilled';\n  let rejectedDelay = 'rejected';\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (stateInput.value === 'fulfilled') {\n        resolve(fulfilledDelay);\n      } else {\n        reject(rejectedDelay);\n      }\n    }, delay);\n  });\n\n  promise\n    .then(fulfilledDelay => {\n      iziToast.success({\n        title: 'Fulfilled promise',\n        message: `✅ Fulfilled promise in ${fulfilledDelay}ms`,\n      });\n    })\n    .catch(rejectedDelay => {\n      iziToast.error({\n        title: 'Rejected promise',\n        message: `❌ Rejected promise in ${rejectedDelay}ms`,\n      });\n    });\n});\n"],"names":["form","delayInput","stateInput","event","delay","fulfilledDelay","rejectedDelay","resolve","reject","iziToast"],"mappings":"yCAGA,MAAMA,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAa,SAAS,cAAc,qBAAqB,EACzDC,EAAa,SAAS,cAAc,qBAAqB,EAEhD,SAAS,cAAc,QAAQ,EAE9CF,EAAK,iBAAiB,SAAUG,GAAS,CACvCA,EAAM,eAAc,EAEpB,IAAIC,EAAQH,EAAW,MACnBI,EAAiB,YACjBC,EAAgB,WAEJ,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC/C,WAAW,IAAM,CACXN,EAAW,QAAU,YACvBK,EAAQF,CAAc,EAEtBG,EAAOF,CAAa,CAEvB,EAAEF,CAAK,CACZ,CAAG,EAGE,KAAKC,GAAkB,CACtBI,EAAS,QAAQ,CACf,MAAO,oBACP,QAAS,0BAA0BJ,CAAc,IACzD,CAAO,CACP,CAAK,EACA,MAAMC,GAAiB,CACtBG,EAAS,MAAM,CACb,MAAO,mBACP,QAAS,yBAAyBH,CAAa,IACvD,CAAO,CACP,CAAK,CACL,CAAC"}